{"version":3,"sources":["components/GoodList.tsx","App.tsx","index.tsx"],"names":["GoodList","goods","className","map","good","goodsFromServer","App","state","isShown","sortAlphabetically","setState","sort","goodA","goodB","localeCompare","SortByLength","length","reverse","reset","this","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mPAMaA,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,oBAAIC,UAAU,YAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBAAeF,UAAU,OAAzB,SAAiCE,GAAxBA,SCLTC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQIC,E,4MACJC,MAAe,CACbN,MAAOI,EACPG,SAAS,G,EAGXC,mBAAqB,WACnB,EAAKC,UAAS,SAACH,GAAD,MAAY,CACxBN,MAAO,YAAIM,EAAMN,OAAOU,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,W,EAIvEE,aAAe,WACb,EAAKL,UAAS,SAACH,GAAD,MAAY,CACxBN,MAAO,YAAIM,EAAMN,OAAOU,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,e,EAIxEC,QAAU,WACR,EAAKP,UAAS,SAAAH,GAAK,MAAK,CACtBN,MAAO,YAAIM,EAAMN,OAAOgB,e,EAI5BC,MAAQ,WACN,EAAKR,SAAS,CAAET,MAAOI,K,4CAGzB,WAAU,IAAD,OACP,EAA2Bc,KAAKZ,MAAxBN,EAAR,EAAQA,MAAOO,EAAf,EAAeA,QAEf,OACE,qBAAKN,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UACGM,GAEC,qCACE,cAAC,EAAD,CAAUP,MAAOA,IACjB,sBAAKC,UAAU,WAAf,UACE,wBACEkB,KAAK,SACLlB,UAAU,kBACVmB,QAASF,KAAKF,QAHhB,qBAOA,wBACEG,KAAK,SACLlB,UAAU,oBACVmB,QAASF,KAAKV,mBAHhB,iCAOA,wBACEW,KAAK,SACLlB,UAAU,gBACVmB,QAASF,KAAKD,MAHhB,mBAOA,wBACEE,KAAK,SACLlB,UAAU,oBACVmB,QAASF,KAAKJ,aAHhB,mCAUJP,GACA,wBACEY,KAAK,SACLlB,UAAU,gBACVmB,QAAS,kBAAM,EAAKX,SAAS,CAAEF,SAAS,KAH1C,kD,GAvEMc,IAAMC,WAqFTjB,ICxGfkB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.80561ee4.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => (\n  <ul className=\"good-list\">\n    {goods.map(good => (\n      <li key={good} className=\"good\">{good}</li>\n    ))}\n  </ul>\n);\n","import React from 'react';\nimport './App.css';\nimport { GoodList } from './components/GoodList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[];\n  isShown: boolean;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    goods: goodsFromServer,\n    isShown: false,\n  };\n\n  sortAlphabetically = () => {\n    this.setState((state) => ({\n      goods: [...state.goods].sort((goodA, goodB) => goodA.localeCompare(goodB)),\n    }));\n  };\n\n  SortByLength = () => {\n    this.setState((state) => ({\n      goods: [...state.goods].sort((goodA, goodB) => goodA.length - goodB.length),\n    }));\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      goods: [...state.goods].reverse(),\n    }));\n  };\n\n  reset = () => {\n    this.setState({ goods: goodsFromServer });\n  };\n\n  render() {\n    const { goods, isShown } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"goods\">\n          {isShown\n          && (\n            <>\n              <GoodList goods={goods} />\n              <div className=\"btn-wrap\">\n                <button\n                  type=\"button\"\n                  className=\"btn-reverse btn\"\n                  onClick={this.reverse}\n                >\n                  Reverse\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn-sortAlpha btn\"\n                  onClick={this.sortAlphabetically}\n                >\n                  Sort alphabetically\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn-reset btn\"\n                  onClick={this.reset}\n                >\n                  Reset\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn-sortByLen btn\"\n                  onClick={this.SortByLength}\n                >\n                  Sort by length\n                </button>\n              </div>\n            </>\n          )}\n          {!isShown && (\n            <button\n              type=\"button\"\n              className=\"btn-start btn\"\n              onClick={() => this.setState({ isShown: true })}\n            >\n              Start your groccery journey\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}